AWSTemplateFormatVersion: '2010-09-09'
Description: Storage resources for ZennLogic (S3, DynamoDB, Secrets)

Parameters:
  Environment:
    Type: String
    Default: prod
    AllowedValues: [dev, prod]
    Description: Environment name

  S3BucketName:
    Type: String
    Description: S3 bucket name (must be globally unique)

Resources:
  DataBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Ref S3BucketName
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256
      VersioningConfiguration:
        Status: Enabled
      LifecycleConfiguration:
        Rules:
          - Id: DeleteOldVersions
            Status: Enabled
            NoncurrentVersionExpirationInDays: 90
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      Tags:
        - Key: Name
          Value: !Sub 'ZennLogic-DataBucket-${Environment}'
        - Key: Environment
          Value: !Ref Environment

  DataBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref DataBucket
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Deny
            Principal: '*'
            Action: 's3:*'
            Resource:
              - !GetAtt DataBucket.Arn
              - !Sub '${DataBucket.Arn}/*'
            Condition:
              Bool:
                'aws:SecureTransport': false

  MetadataTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: !Sub 'zennlogic-metadata-${Environment}'
      AttributeDefinitions:
        - AttributeName: id
          AttributeType: S
      KeySchema:
        - AttributeName: id
          KeyType: HASH
      BillingMode: PAY_PER_REQUEST
      PointInTimeRecoverySpecification:
        PointInTimeRecoveryEnabled: true
      SSESpecification:
        SSEEnabled: true
      Tags:
        - Key: Name
          Value: !Sub 'ZennLogic-MetadataTable-${Environment}'
        - Key: Environment
          Value: !Ref Environment

  ApiKeySecret:
    Type: AWS::SecretsManager::Secret
    Properties:
      Name: !Sub 'zennlogic/${Environment}/api-key'
      Description: API key for authenticating clients to ZennLogic service
      GenerateSecretString:
        SecretStringTemplate: '{}'
        GenerateStringKey: api_key
        PasswordLength: 64
        ExcludeCharacters: '"@/\'
      Tags:
        - Key: Name
          Value: !Sub 'ZennLogic-ApiKey-${Environment}'
        - Key: Environment
          Value: !Ref Environment

Outputs:
  S3BucketName:
    Description: S3 bucket name
    Value: !Ref DataBucket
    Export:
      Name: !Sub 'ZennLogic-${Environment}-S3Bucket'

  S3BucketArn:
    Description: S3 bucket ARN
    Value: !GetAtt DataBucket.Arn
    Export:
      Name: !Sub 'ZennLogic-${Environment}-S3BucketArn'

  DynamoDBTableName:
    Description: DynamoDB table name
    Value: !Ref MetadataTable
    Export:
      Name: !Sub 'ZennLogic-${Environment}-DynamoTable'

  DynamoDBTableArn:
    Description: DynamoDB table ARN
    Value: !GetAtt MetadataTable.Arn
    Export:
      Name: !Sub 'ZennLogic-${Environment}-DynamoTableArn'

  ApiKeySecretArn:
    Description: Secrets Manager secret ARN
    Value: !Ref ApiKeySecret
    Export:
      Name: !Sub 'ZennLogic-${Environment}-ApiKeySecretArn'
